% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pml_model.r
\name{pklinearmodel}
\alias{pklinearmodel}
\title{pklinearmodel}
\usage{
pklinearmodel(isPopulation = TRUE, parameterization = Clearance,
  absorption = Intravenous, numCompartments = 1, isClosedForm = TRUE,
  isTlag = FALSE, isTimeBased = TRUE, hasEliminationComp = FALSE,
  isFractionExcreted = FALSE, infusionAllowed = FALSE,
  isSaturating = FALSE, isDuration = FALSE, isSequential = FALSE,
  isPkFrozen = FALSE, linearType = LinearAlpha,
  isLinearFrozen = FALSE, hasEffectsCompartment = FALSE,
  covariates = c(), modelName = "", workingDir = "")
}
\arguments{
\item{isPopulation}{Population vs Individual models}

\item{parameterization}{Options are Clearance|Micro|Macro|Macro1}

\item{absorption}{Options are Extravascular|Intravenous}

\item{numCompartments}{1|2|3}

\item{isTlag}{Is there a dose time lag}

\item{isTimeBased}{Is model time-based}

\item{hasEliminationComp}{Is there an elimination compartment}

\item{isFractionExcreted}{Is elimination compartment fraction excreted}

\item{infusionAllowed}{Are infusions allowed}

\item{isSaturating}{Use Michaelis-Menten kinetics}

\item{isDuration}{Do infusions use duration instead of rate}

\item{isSequential}{PK model receive parameters from another model}

\item{isPkFrozen}{Is PK model frozen}

\item{linearType}{One of LinearAlpha|LinearBeta|LinearGamma}

\item{isLinearFrozen}{Is Linear Model frozen}

\item{covariates}{List of covariates defined for the model}

\item{modelName}{Visual name for the model}

\item{workingDir}{Working directory to run the model}
}
\description{
Method to create a PK/PD model
}
\examples{
      model=pklinearmodel()

       OR

      model=pklinearmodel( isPopulation=TRUE,
                           parameterization=Clearance,
                           absorption= ExtraVascular,
                           numCompartments=1,
                           isTlag=TRUE,
                           hasEliminationComp=TRUE,
                           linearModelType=LinearBeta))

      print(attr(model,"statements"))
      test(){
     	deriv(Aa = - Ka * Aa)
     	deriv(A1 = Ka * Aa - Cl * C)
     	urinecpt(A0 = Cl * C)
     	dosepoint(Aa, tlag = Tlag)
     	C = A1 / V
     	E = Alpha + Beta*C
     	error(EEps = 1)
     	observe(EObs = E + EEps)
     	error(CEps = 1)
     	observe(CObs = C + CEps)
     	error(A0Eps = 1)
     	observe(A0Obs = A0 + A0Eps)
     	stparm(Ka = tvKa * exp(nKa))
     	stparm(V = tvV * exp(nV))
     	stparm(Cl = tvCl * exp(nCl))
     	stparm(Tlag = tvTlag * exp(nTlag))
     	stparm(Alpha = tvAlpha * exp(nAlpha))
     	stparm(Beta = tvBeta * exp(nBeta))
     	fixef(tvKa = c(, 1, ))
     	fixef(tvV = c(, 1, ))
     	fixef(tvCl = c(, 1, ))
     	fixef(tvTlag = c(, 1, ))
     	fixef(tvAlpha = c(, 1, ))
     	fixef(tvBeta = c(, 1, ))
     	ranef(diag(nAlpha, nBeta, nV, nCl, nTlag, nKa) = c(1, 1, 1, 1, 1, 1))
       }

}
