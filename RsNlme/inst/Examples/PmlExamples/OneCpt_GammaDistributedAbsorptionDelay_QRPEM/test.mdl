##############################################################################################################
##                              Description
##
## The purpose of this file is to demonstrate how to implement a gamma absorption delay model in PML. 
##
## The model demonstrated is a one-compartment model with the absorption delay time assumed to be gamma distributed
##      dA1(t)/dt = sum_{i=1}^{m}D_{i}gammaPDF(t - t_{Di}; rateParameter, shapeParameter) - Cl/V * A1(t)
## Here
##    - A1 denotes the drug amount at central compartment with V and Cl respectively being the central volume
##      distribution and central clearance rate 
##    - m denotes the number of bolus dosing events
##    - D_{i} is the amount of dose administered at time t_{Di} for the ith dosing events
##    - gammaPDF denotes the probability density function of a gamma distribution, which are characterized by
##      two parameters, rate and shape. 
##
##############################################################################################################
test(){

	# central compartment 
	delayInfCpt(A1, MeanDelayTime, ShapeParamMinusOne, out = - Cl * C)
	dosepoint(A1)
	
	# drug concentration at the central compartment 
	C = A1 / V 
	
	# ============== residual error model ===================================================
	error(CEps = 0.1)
	observe(CObs = C * (1 + CEps))
	
	# ============== Model parameters =========================================================
	# ------------ structural model parameters ---------------------------------------------
	stparm(V = exp(tvlogV + nlogV)) # volume of distribution for central compartment
	stparm(Cl = exp(tvlogCl + nlogCl)) # central clearance 
	stparm(MeanDelayTime = exp(tvlogMeanDelayTime + nlogMeanDelayTime)) # mean delay time 
	stparm(ShapeParamMinusOne = exp(tvlogShapeParamMinusOne)) # (ShapeParameter - 1) 
	
	# ---------- fixed effects -----------------------------------------------------------
	fixef(tvlogV = c(, 1, )) # volume of distribution for central compartment 
	fixef(tvlogCl = c(, 0.5, )) # central clearance
	fixef(tvlogMeanDelayTime = c(, 2, )) # mean delay time 
	fixef(tvlogShapeParamMinusOne = c(, 1, )) # (ShapeParameter - 1) 
		
	
	# -----------random effects--------------------------------------------------------
	ranef(diag(nlogV, nlogCl, nlogMeanDelayTime) = c(0.1, 0.1, 0.1))
	
	# ========= tranform the fixed effects from log-scale to original scale =====
	secondary(tvV = exp(tvlogV))
	secondary(tvCl = exp(tvlogCl))
	secondary(tvMeanDelayTime = exp(tvlogMeanDelayTime))
	secondary(tvShapeParamMinusOne = exp(tvlogShapeParamMinusOne))
}
