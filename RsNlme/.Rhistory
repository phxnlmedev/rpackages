modelColumnMapping(model)=c(id="Subject", CObs="Conc",A1="Amount")
#
# Change error model
#
#residualEffect(model,"C")=c(errorType=MixRatio, SD="0.16")
residualEffect(model,"C")=c(errorType=Multiplicative,SD="0.16")
#
# Set initial estimates on model variables
#
#initFixedEffects(model)=c(tvV=16,tvCl=7,tvV2=41,tvCl2=14)
#
# Write out default model and mapping files
#
#writeDefaultFiles(model,dataset)
#
# Evaluate the model and pick reasonable initial values for fixed effects
#
host = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("LOCAL_MPI"),
hostName="MPI",
numCores=4)
mhost = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("MULTICORE"),
hostName="MULTICORE",
numCores=4)
#
# NLME engine to use
#
engineParams = NlmeEngineExtraParams(PARAMS_METHOD=METHOD_FOCE_ELS,
PARAMS_NUM_ITERATIONS=1000,
PARAMS_SAND="TRUE")
#estimatesUI(model,unique(input$Subject),host)
covarModel=loadModel("CovarModel")
bootModel = copyModel(covarModel,modelName="BootModel")
bootParam = NlmeBootstrapParams(numReplicates=15,
randomNumSeed=1234,
stratifyColumns="Weight")
#
# Run a bootstrap job
#
job=bootstrap(mhost,dataset,engineParams,bootParam,runInBackground = FALSE,model=bootModel)
traceback()
dataset=bootModel@dataset
bootParam = NlmeBootstrapParams(numReplicates=15,
randomNumSeed=1234,
stratifyColumns="Weight")
#
# Run a bootstrap job
#
job=bootstrap(mhost,dataset,engineParams,bootParam,runInBackground = FALSE,model=bootModel)
traceback()
#
# Load libraries and setup paths and hosts
#
#setwd("D:/SDCard/NlmeInstall_04_30_18/Pml")
setwd("c:/Work/RsNlmeWorkDirectory")
#
# setup environment
#
Sys.setenv("NLME_ROOT_DIRECTORY"="c:/Work/RsNlmeWorkDirectory")
Sys.setenv("INSTALLDIR"="C:/Program Files/R/R-3.5.1/library/Certara.NLME8/InstallDirNLME")
Sys.setenv("INSTALLDIR"="C:/PROGRA~1/R/R-3.5.1/library/Certara.NLME8/InstallDirNLME")
# License
Sys.setenv("PhoenixLicenseFile"="C:\\Program Files (x86)\\Pharsight\\Phoenix\\application\\Services\\Licensing\\lservrc")
#Sys.setenv("NLME_HASH"="1395043679")
#Sys.setenv("NLME_KEEP_GRID_RESULTS"="TRUE")
library(ggplot2)
library(xpose)
library(Certara.NLME8)
library(RsNlme)
library(shiny)
#source("setup_defaults.R")
#
# Look at the data
#
input=read.csv("16subjects.csv")
#View(input)
#
# Graph time vs. Conc
#
df=data.frame(time=input$Act_Time,conc=input$Conc,subject=input$Subject)
#ggplot(data=df,aes(x=time,y=conc))+scale_y_log10()+geom_point(colour=df$subject)+
geom_line(aes(x=df$time,y=df$conc,group=df$subject,colour=df$subject))
#
# Visualize/examine input data
#
#library(ggquickeda)
#run_ggquickeda()
#unloadNamespace("ggquickeda")
#
# Format the input file and add a gender_code for the model
#
colnames(input)
input$Gender_Code=as.numeric(input$Gender)
head(input)
#
# Statistics on possible covariates
#
mean(input$Age)
mean(input$BodyWeight)
#
# Easy, peasy!
#
model = pkmodel(numComp=2,
isPopulation=TRUE,
absorption = Intravenous,
modelName="InitialModel")
#
# Looks at model variables and map them to data columns
#
dataset=NlmeDataset(model=model)
initColMapping(model)=input
modelColumnMapping(model)
colnames(input)
print(modelVariableNames(model))
modelColumnMapping(model)=c(id="Subject", CObs="Conc",A1="Amount")
#
# Change error model
#
#residualEffect(model,"C")=c(errorType=MixRatio, SD="0.16")
residualEffect(model,"C")=c(errorType=Multiplicative,SD="0.16")
#
# Set initial estimates on model variables
#
#initFixedEffects(model)=c(tvV=16,tvCl=7,tvV2=41,tvCl2=14)
#
# Write out default model and mapping files
#
#writeDefaultFiles(model,dataset)
#
# Evaluate the model and pick reasonable initial values for fixed effects
#
host = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("LOCAL_MPI"),
hostName="MPI",
numCores=4)
mhost = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("MULTICORE"),
hostName="MULTICORE",
numCores=4)
#
# NLME engine to use
#
engineParams = NlmeEngineExtraParams(PARAMS_METHOD=METHOD_FOCE_ELS,
PARAMS_NUM_ITERATIONS=1000,
PARAMS_SAND="TRUE")
#estimatesUI(model,unique(input$Subject),host)
covarModel=loadModel("CovarModel")
model@dataset@workingDir
bootModel = copyModel(covarModel,modelName="BootModel")
#writeDefaultFiles(bootModel,dataset)
bootModel@dataset@workingDir
bootParam = NlmeBootstrapParams(numReplicates=15,
randomNumSeed=1234,
stratifyColumns="Weight")
#
# Run a bootstrap job
#
job=bootstrap(mhost,dataset,engineParams,bootParam,runInBackground = FALSE,model=bootModel)
job=bootstrap(mhost,engineParams,bootParam,runInBackground = FALSE,model=bootModel)
controlFile
job=bootstrap(mhost,engineParams,bootParam,runInBackground = FALSE,model=bootModel)
args
args[[5]]
#
# Load libraries and setup paths and hosts
#
#setwd("D:/SDCard/NlmeInstall_04_30_18/Pml")
setwd("c:/Work/RsNlmeWorkDirectory")
#
# setup environment
#
Sys.setenv("NLME_ROOT_DIRECTORY"="c:/Work/RsNlmeWorkDirectory")
Sys.setenv("INSTALLDIR"="C:/Program Files/R/R-3.5.1/library/Certara.NLME8/InstallDirNLME")
Sys.setenv("INSTALLDIR"="C:/PROGRA~1/R/R-3.5.1/library/Certara.NLME8/InstallDirNLME")
# License
Sys.setenv("PhoenixLicenseFile"="C:\\Program Files (x86)\\Pharsight\\Phoenix\\application\\Services\\Licensing\\lservrc")
#Sys.setenv("NLME_HASH"="1395043679")
#Sys.setenv("NLME_KEEP_GRID_RESULTS"="TRUE")
library(ggplot2)
library(xpose)
library(Certara.NLME8)
library(RsNlme)
library(shiny)
#source("setup_defaults.R")
#
# Look at the data
#
input=read.csv("16subjects.csv")
#View(input)
#
# Graph time vs. Conc
#
df=data.frame(time=input$Act_Time,conc=input$Conc,subject=input$Subject)
#ggplot(data=df,aes(x=time,y=conc))+scale_y_log10()+geom_point(colour=df$subject)+
geom_line(aes(x=df$time,y=df$conc,group=df$subject,colour=df$subject))
#
# Visualize/examine input data
#
#library(ggquickeda)
#run_ggquickeda()
#unloadNamespace("ggquickeda")
#
# Format the input file and add a gender_code for the model
#
colnames(input)
input$Gender_Code=as.numeric(input$Gender)
head(input)
#
# Statistics on possible covariates
#
mean(input$Age)
mean(input$BodyWeight)
#
# Easy, peasy!
#
model = pkmodel(numComp=2,
isPopulation=TRUE,
absorption = Intravenous,
modelName="InitialModel")
#
# Looks at model variables and map them to data columns
#
dataset=NlmeDataset(model=model)
initColMapping(model)=input
modelColumnMapping(model)
colnames(input)
print(modelVariableNames(model))
modelColumnMapping(model)=c(id="Subject", CObs="Conc",A1="Amount")
#
# Change error model
#
#residualEffect(model,"C")=c(errorType=MixRatio, SD="0.16")
residualEffect(model,"C")=c(errorType=Multiplicative,SD="0.16")
#
# Set initial estimates on model variables
#
#initFixedEffects(model)=c(tvV=16,tvCl=7,tvV2=41,tvCl2=14)
#
# Write out default model and mapping files
#
#writeDefaultFiles(model,dataset)
#
# Evaluate the model and pick reasonable initial values for fixed effects
#
host = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("LOCAL_MPI"),
hostName="MPI",
numCores=4)
mhost = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("MULTICORE"),
hostName="MULTICORE",
numCores=4)
#
# NLME engine to use
#
engineParams = NlmeEngineExtraParams(PARAMS_METHOD=METHOD_FOCE_ELS,
PARAMS_NUM_ITERATIONS=1000,
PARAMS_SAND="TRUE")
#estimatesUI(model,unique(input$Subject),host)
covarModel=loadModel("CovarModel")
bootModel = copyModel(covarModel,modelName="BootModel")
#writeDefaultFiles(bootModel,dataset)
#
# 5 boot replicates with seed = 1234
#
bootParam = NlmeBootstrapParams(numReplicates=15,
randomNumSeed=1234,
stratifyColumns="Weight")
#
# Run a bootstrap job
#
job=bootstrap(mhost,engineParams,bootParam,runInBackground = FALSE,model=bootModel)
localWorkingDir
out=read.csv(paste0(model@modelInfo@workingDir,"/out.csv"))
View(out)
out=read.csv(paste0(bootModel@modelInfo@workingDir,"/out.csv"))
View(out)
vpcModel= copyModel(covarModel,modelName="VpcModel")
#vpcModel=copyModel(model,modelName="VpcModel")
observationNames(vpcModel)
obsVars = GetObservationVariables(vpcModel@dataset)
observationParameters(obsVars[[1]])=c(xaxis=VPC_XAXIS_T,
binningMethod=VPC_BIN_KMEANS,
quantilesValues ="5,50,95",
quantilesSecondaryValues="4,50,96")
simTable1 = NlmeSimTableDef("Simtable01.csv","0,0.5,1,2,4,8,24","C,CObs,sex,age",FALSE)
vpc = NlmeVpcParams(numReplicates=1000,
seed=1957,
stratifyColumns="sex",
observationVars=obsVars,
simulationTables=c(simTable1))
print(vpcModel)
#writeDefaultFiles(vpcModel,dataset,vpc)
job=vpcmodel(host,vpc,runInBackground = FALSE,model=vpcModel)
vpcModel@modelInfo@workingDir
print(vpcModel)
model@dataset@workingDir
bootModel@dataset@workingDir
vpcModel= copyModel(covarModel,modelName="VpcModel")
vpcModel@dataset@workingDir
#
# Load libraries and setup paths and hosts
#
#setwd("D:/SDCard/NlmeInstall_04_30_18/Pml")
setwd("c:/Work/RsNlmeWorkDirectory")
#
# setup environment
#
Sys.setenv("NLME_ROOT_DIRECTORY"="c:/Work/RsNlmeWorkDirectory")
Sys.setenv("INSTALLDIR"="C:/Program Files/R/R-3.5.1/library/Certara.NLME8/InstallDirNLME")
Sys.setenv("INSTALLDIR"="C:/PROGRA~1/R/R-3.5.1/library/Certara.NLME8/InstallDirNLME")
# License
Sys.setenv("PhoenixLicenseFile"="C:\\Program Files (x86)\\Pharsight\\Phoenix\\application\\Services\\Licensing\\lservrc")
#Sys.setenv("NLME_HASH"="1395043679")
#Sys.setenv("NLME_KEEP_GRID_RESULTS"="TRUE")
library(ggplot2)
library(xpose)
library(Certara.NLME8)
library(RsNlme)
library(shiny)
#source("setup_defaults.R")
#
# Look at the data
#
input=read.csv("16subjects.csv")
#View(input)
#
# Graph time vs. Conc
#
df=data.frame(time=input$Act_Time,conc=input$Conc,subject=input$Subject)
#ggplot(data=df,aes(x=time,y=conc))+scale_y_log10()+geom_point(colour=df$subject)+
geom_line(aes(x=df$time,y=df$conc,group=df$subject,colour=df$subject))
#
# Visualize/examine input data
#
#library(ggquickeda)
#run_ggquickeda()
#unloadNamespace("ggquickeda")
#
# Format the input file and add a gender_code for the model
#
colnames(input)
input$Gender_Code=as.numeric(input$Gender)
head(input)
#
# Statistics on possible covariates
#
mean(input$Age)
mean(input$BodyWeight)
#
# Easy, peasy!
#
model = pkmodel(numComp=2,
isPopulation=TRUE,
absorption = Intravenous,
modelName="InitialModel")
#
# Looks at model variables and map them to data columns
#
dataset=NlmeDataset(model=model)
initColMapping(model)=input
modelColumnMapping(model)
colnames(input)
print(modelVariableNames(model))
modelColumnMapping(model)=c(id="Subject", CObs="Conc",A1="Amount")
#
# Change error model
#
#residualEffect(model,"C")=c(errorType=MixRatio, SD="0.16")
residualEffect(model,"C")=c(errorType=Multiplicative,SD="0.16")
#
# Set initial estimates on model variables
#
#initFixedEffects(model)=c(tvV=16,tvCl=7,tvV2=41,tvCl2=14)
#
# Write out default model and mapping files
#
#writeDefaultFiles(model,dataset)
#
# Evaluate the model and pick reasonable initial values for fixed effects
#
host = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("LOCAL_MPI"),
hostName="MPI",
numCores=4)
mhost = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("MULTICORE"),
hostName="MULTICORE",
numCores=4)
#
# NLME engine to use
#
engineParams = NlmeEngineExtraParams(PARAMS_METHOD=METHOD_FOCE_ELS,
PARAMS_NUM_ITERATIONS=1000,
PARAMS_SAND="TRUE")
#estimatesUI(model,unique(input$Subject),host)
covarModel=loadModel("CovarModel")
vpcModel= copyModel(covarModel,modelName="VpcModel")
#vpcModel=copyModel(model,modelName="VpcModel")
observationNames(vpcModel)
obsVars = GetObservationVariables(vpcModel@dataset)
observationParameters(obsVars[[1]])=c(xaxis=VPC_XAXIS_T,
binningMethod=VPC_BIN_KMEANS,
quantilesValues ="5,50,95",
quantilesSecondaryValues="4,50,96")
simTable1 = NlmeSimTableDef("Simtable01.csv","0,0.5,1,2,4,8,24","C,CObs,sex,age",FALSE)
vpc = NlmeVpcParams(numReplicates=1000,
seed=1957,
stratifyColumns="sex",
observationVars=obsVars,
simulationTables=c(simTable1))
print(vpcModel)
#writeDefaultFiles(vpcModel,dataset,vpc)
job=vpcmodel(host,vpc,runInBackground = FALSE,model=vpcModel)
model@dataset@workingDir
c
print(job)
##
# Load libraries and setup paths and hosts
#
library(ggplot2)
library(xpose)
library(Certara.NLME8)
library(RsNlme)
library(shiny)
#
# goto your working directory where you copied the demo files
#
setwd("c:/Work/NlmeInstall_07_10_19/Examples")
#
# setup environment
#
Sys.setenv("NLME_ROOT_DIRECTORY"="c:/Work/RsNlmeWorkDirectory")
Sys.setenv("INSTALLDIR"="C:/Program Files/R/R-3.5.1/library/Certara.NLME8/InstallDirNLME")
# License
Sys.setenv("PhoenixLicenseFile"="C:\\Program Files (x86)\\Certara\\Phoenix\\application\\Services\\Licensing\\lservrc")
#Sys.setenv("NLME_HASH"="xxxx")
#
# Look at the input data
#
input=read.csv("16subjects.csv")
View(input)
#
# Graph time vs. Conc
Sys.setenv("PhoenixLicenseFile"="C:\\Program Files (x86)\\Pharsight\\Phoenix\\application\\Services\\Licensing\\lservrc")
#Sys.setenv("NLME_HASH"="xxxx")
df=data.frame(time=input$Act_Time,conc=input$Conc,subject=input$Subject)
ggplot(data=df,aes(x=time,y=conc))+scale_y_log10()+geom_point(colour=df$subject)+
geom_line(aes(x=df$time,y=df$conc,group=df$subject,colour=df$subject))
#
# Format the input file and add a gender_code for the model
#
colnames(input)
input$Gender_Code=as.numeric(input$Gender)
#
# Statistics on possible covariates
#
mean(input$Age)
mean(input$BodyWeight)
#
# 2 Compartment population PK model with intravaneous observation
# Help is avaialble by typing ?pkmodel
#
model = pkmodel(numComp=2,
isPopulation=TRUE,
absorption = Intravenous,
modelName="InitialModel")
#
# Looks at model variables and map them to data columns
#
initColMapping(model)=input
modelColumnMapping(model)=c(id="Subject", CObs="Conc",A1="Amount")
#
# Change error model
#
residualEffect(model,"C")=c(errorType=Multiplicative,SD="0.16")
#
# Set initial estimates on model variables
#
#initFixedEffects(model)=c(tvV=16,tvCl=7,tvV2=41,tvCl2=14)
#
# Where to execute fitting
#
host = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("LOCAL_MPI"),
hostName="MPI",
numCores=4)
#
# Evaluate the model and pick reaso
engineParams = NlmeEngineExtraParams(PARAMS_METHOD=METHOD_FOCE_ELS,
PARAMS_NUM_ITERATIONS=1000,
PARAMS_SAND="TRUE")
#
# Do the model fitting
#
job=fitmodel(host,engineParams,model=model)
Sys.getenv("NLME_ROOT_DIRECTORY")
?pkemaxmodel
?pkmodel
library(RsNlme)
?pkmodel
?pkemaxmodel
