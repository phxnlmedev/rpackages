#
host = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("LOCAL_MPI"),
hostName="MPI",
numCores=4)
#
# Evaluate the model and pick reasonable initial values for fixed effects
#
engineParams = NlmeEngineExtraParams(PARAMS_METHOD=METHOD_FOCE_ELS,
PARAMS_NUM_ITERATIONS=1000,
PARAMS_SAND="TRUE")
getwd()
model= acceptAllEffects(model)
model
covarModel = copyModel(model,modelName="CovarModel")
#
# Examine Some covariates
#
sex=categoricalCovariate("sex",c(1,2),c("female","male"))
weight=NlmeCovariateParameter("weight",
centerValue="70",
continuousType  =CovarNumber,
direction=Forward)
age=NlmeCovariateParameter("age")
covarModel=addCovariates(covarModel,
c(sex,weight,age),
c("V"="weight,age",
"Cl"="sex,weight"))
#
# initialize etas
#
initRandomEffects(covarModel)=c(Diagonal,FALSE,"nCl,nV,nCl2,nV2", "0.1,0.1,0.1,0.1")
initColMapping(covarModel)=input
#print(RsNlme::modelColumnMapping(covarModel))
#print(columnNames(dataset))
#print(modelVariableNames(covarModel))
modelColumnMapping(covarModel)=c(id="Subject", CObs="Conc",A1="Amount","sex"="Gender_Code")
#
# Run a stepwise covariate search
#
sp = NlmeStepwiseParams(0.01, 0.001, "-2LL")
host
#
# remote execution on the grid
#
job=stepwiseSearch(host,
dataset,
engineParams,
covariateModel(covarModel),
sp,
runInBackground = FALSE )
#
# Load libraries and setup paths and hosts
#
library(ggplot2)
library(xpose)
library(Certara.NLME8)
library(RsNlme)
library(shiny)
#
# goto your working directory where you copied the demo files
#
setwd("c:/Work/RsNlmeWorkDirectory")
#
# setup environment
#
Sys.setenv("NLME_ROOT_DIRECTORY"="c:/Work/RsNlmeWorkDirectory")
Sys.setenv("INSTALLDIR"="C:/Program Files/R/R-3.5.1/library/Certara.NLME8/InstallDirNLME")
# License
#Sys.setenv("PhoenixLicenseFile"="C:\\Program Files (x86)\\Pharsight\\Phoenix\\application\\Services\\Licensing\\lservrc")
#Sys.setenv("NLME_HASH"="xxxx")
#
# Look at the input data
#
input=read.csv("16subjects.csv")
View(input)
#
# Graph time vs. Conc
#
df=data.frame(time=input$Act_Time,conc=input$Conc,subject=input$Subject)
ggplot(data=df,aes(x=time,y=conc))+scale_y_log10()+geom_point(colour=df$subject)+
geom_line(aes(x=df$time,y=df$conc,group=df$subject,colour=df$subject))
#
# Format the input file and add a gender_code for the model
#
colnames(input)
input$Gender_Code=as.numeric(input$Gender)
#
# Statistics on possible covariates
#
mean(input$Age)
mean(input$BodyWeight)
#
# 2 Compartment population PK model with intravaneous observation
# Help is avaialble by typing ?pkmodel
#
model = pkmodel(numComp=2,
isPopulation=TRUE,
absorption = Intravenous,
modelName="InitialModel")
#
# Looks at model variables and map them to data columns
#
dataset=NlmeDataset()
initColMapping(model)=input
#modelColumnMapping(model)
#colnames(input)
#print(modelVariableNames(model))
modelColumnMapping(model)=c(id="Subject", CObs="Conc",A1="Amount")
#
# Change error model
#
residualEffect(model,"C")=c(errorType=Multiplicative,SD="0.16")
#
# Set initial estimates on model variables
#
#initFixedEffects(model)=c(tvV=16,tvCl=7,tvV2=41,tvCl2=14)
#
# Write out default model and mapping files
#
writeDefaultFiles(model,dataset)
#
# Where to execute fitting
#
host = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("LOCAL_MPI"),
hostName="MPI",
numCores=4)
estimatesUI(model,unique(input$Subject),host)
effects=getInitialEstimates()
initFixedEffects(model) = effects
print(model)
engineParams = NlmeEngineExtraParams(PARAMS_METHOD=METHOD_FOCE_ELS,
PARAMS_NUM_ITERATIONS=1000,
PARAMS_SAND="TRUE")
#
# Do the model fitting
#
job=fitmodel(host,dataset,engineParams)
library(xpose)
library(Xpose.Nlme)
xp=xposeNlme(dir="./",modelName="Initial Model")
list_vars(xp)
doxpose(xp)
model= acceptAllEffects(model)
covarModel = copyModel(model,modelName="CovarModel")
#
# Examine Some covariates
#
sex=categoricalCovariate("sex",c(1,2),c("female","male"))
weight=NlmeCovariateParameter("weight",
centerValue="70",
continuousType  =CovarNumber,
direction=Forward)
age=NlmeCovariateParameter("age")
covarModel=addCovariates(covarModel,
c(sex,weight,age),
c("V"="weight,age",
"Cl"="sex,weight"))
#
# initialize etas
#
initRandomEffects(covarModel)=c(Diagonal,FALSE,"nCl,nV,nCl2,nV2", "0.1,0.1,0.1,0.1")
#
# Map newly created model variables
initColMapping(covarModel)=input
#print(RsNlme::modelColumnMapping(covarModel))
#print(columnNames(dataset))
#print(modelVariableNames(covarModel))
modelColumnMapping(covarModel)=c(id="Subject", CObs="Conc",A1="Amount","sex"="Gender_Code")
#
# Run a stepwise covariate search
#
sp = NlmeStepwiseParams(0.01, 0.001, "-2LL")
#
# remote execution on the grid
#
job=stepwiseSearch(host,
dataset,
engineParams,
covariateModel(covarModel),
sp,
runInBackground = FALSE )
print(job)
mhost = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("MULTICORE"),
hostName="MULTICORE",
numCores=4)
#
# Validate the model with bootstrap
#
#
# Copy the model
#
bootModel = copyModel(covarModel,modelName="BootModel")
writeDefaultFiles(bootModel,dataset)
#
# 5 boot replicates with seed = 1234
#
boot = NlmeBootstrapParams(numReplicates=15,
randomNumSeed=1234,
stratifyColumns="Weight")
#
# Run a bootstrap job
#
job=bootstrap(mhost,dataset,engineParams,boot,runInBackground = FALSE)
print(job)
library(devtools)
build_vignettes()
getwd()
build_vignettes()
library(devtools)
build_vignettes()
#
# Load libraries and setup paths and hosts
#
library(ggplot2)
library(xpose)
library(Certara.NLME8)
library(RsNlme)
library(shiny)
#
# goto your working directory where you copied the demo files
#
setwd("c:/Work/RsNlmeWorkDirectory")
#
# setup environment
#
Sys.setenv("NLME_ROOT_DIRECTORY"="c:/Work/RsNlmeWorkDirectory")
Sys.setenv("INSTALLDIR"="C:/Program Files/R/R-3.5.1/library/Certara.NLME8/InstallDirNLME")
# License
#Sys.setenv("PhoenixLicenseFile"="C:\\Program Files (x86)\\Pharsight\\Phoenix\\application\\Services\\Licensing\\lservrc")
#Sys.setenv("NLME_HASH"="xxxx")
#
# Look at the input data
#
input=read.csv("16subjects.csv")
View(input)
#
# Graph time vs. Conc
#
df=data.frame(time=input$Act_Time,conc=input$Conc,subject=input$Subject)
ggplot(data=df,aes(x=time,y=conc))+scale_y_log10()+geom_point(colour=df$subject)+
geom_line(aes(x=df$time,y=df$conc,group=df$subject,colour=df$subject))
#
# Format the input file and add a gender_code for the model
#
colnames(input)
input$Gender_Code=as.numeric(input$Gender)
#
# Statistics on possible covariates
#
mean(input$Age)
mean(input$BodyWeight)
#
# 2 Compartment population PK model with intravaneous observation
# Help is avaialble by typing ?pkmodel
#
model = pkmodel(numComp=2,
isPopulation=TRUE,
absorption = Intravenous,
modelName="InitialModel")
#
# Looks at model variables and map them to data columns
#
dataset=NlmeDataset()
initColMapping(model)=input
#modelColumnMapping(model)
#colnames(input)
#print(modelVariableNames(model))
modelColumnMapping(model)=c(id="Subject", CObs="Conc",A1="Amount")
#
# Change error model
#
residualEffect(model,"C")=c(errorType=Multiplicative,SD="0.16")
#
# Set initial estimates on model variables
#
#initFixedEffects(model)=c(tvV=16,tvCl=7,tvV2=41,tvCl2=14)
#
# Write out default model and mapping files
#
writeDefaultFiles(model,dataset)
#
# Where to execute fitting
#
host = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("LOCAL_MPI"),
hostName="MPI",
numCores=4)
#
# Evaluate the model and pick reasonable initial values for fixed effects
#
estimatesUI(model,unique(input$Subject),host)
runApp('C:/Work/Next/PMLUtilities-Next/NLME7CommandLine/RPackages/RsNlmeExtras/PKUI1.R')
library(devtools)
build_vignettes()
setwd("D:/SDCard/NlmeInstall_04_30_18/Pml")
source("setup_defaults.R")
library(ggplot2)
library(xpose)
library(Certara.NLME8)
library(RsNlme)
source("setup_defaults.R")
#
# Look at the data
#
input=read.csv("PKPD_Data.csv")
df=data.frame(time=input$Time,conc=input$Conc,subject=input$ID)
ggplot(data=df,aes(x=time,y=conc))+scale_y_log10()+geom_point(colour=df$subject)+
geom_line(aes(x=df$time,y=df$conc,group=df$subject,colour=df$subject))
colnames(input)
#input$Gender_Code=as.numeric(input$Gender)
head(input)
model = pkmodel(numComp=1,
absorption = Extravascular,
modelName="PkModel")
#
# Looks at model variables and map them to data columns
#
dataset=defaultDataset(model,input)
initColMapping(model)= input
print(modelColumnMapping(model))
print(columnNames(dataset))
print(modelVariableNames(model))
modelColumnMapping(model)=c(id="ID", CObs="Conc",Aa="Dose")
writeDefaultFiles(model,dataset)
estimatesUI(model,unique(input$ID),host)
job=fitmodel(host,dataset,engineParams)
model=acceptAllEffects(model)
library(xpose)
library(Xpose.Nlme)
xp=xposeNlme(dir="./",modelName="Initial Model")
list_vars(xp)
dv_vs_pred(xp)
setwd("D:/SDCard/NlmeInstall_04_30_18/Pml")
input=read.csv("PKPD_Data.csv")
pkpdmodel = pkemaxmodel(numComp=1,
absorption = Extravascular,
isSequential = FALSE  ,
hasEliminationComp = FALSE,
checkBaseline = TRUE,
hasEffectsCompartment = TRUE,
modelName="PkPdModel")
dataset=defaultDataset(pkpdmodel,input)
initColMapping(pkpdmodel)= input
print(modelColumnMapping(pkpdmodel))
print(columnNames(dataset))
print(modelVariableNames(pkpdmodel))
modelColumnMapping(pkpdmodel)=c(id="ID", Aa="Dose","EObs"="Effect","CObs"="Conc")
residualEffect(pkpdmodel,"C")=c(errorType=Multiplicative,SD="01")
residualEffect(pkpdmodel,"E")=c(errorType=Multiplicative,SD="01")
#initRandomEffects(pkpdmodel) = c(Diagonal,FALSE,"nEC50,nEmax,nV,nCl,nKe0","0.1,0.1,0.1,0.1,01")
initRandomEffects(pkpdmodel) = c(Diagonal,FALSE,"nEC50,nEmax,nV","0.1,0.01,0.1",
Block, FALSE,"nCl,nKe0","0.1,0,0.1")
initFixedEffects(pkpdmodel)=c(tvKe0=10,tvE0=50,tvEmax=100)
pkpdmodel=generatePMLModel(pkpdmodel)
print(pkpdmodel)
writeDefaultFiles(pkpdmodel,dataset)
estimatesUI(pkpdmodel,unique(input$ID), host)
#
# Load libraries and setup paths and hosts
#
library(ggplot2)
library(xpose)
library(Certara.NLME8)
library(RsNlme)
library(shiny)
#
# goto your working directory where you copied the demo files
#
setwd("c:/Work/RsNlmeWorkDirectory")
#
# setup environment
#
Sys.setenv("NLME_ROOT_DIRECTORY"="c:/Work/RsNlmeWorkDirectory")
Sys.setenv("INSTALLDIR"="C:/Program Files/R/R-3.5.1/library/Certara.NLME8/InstallDirNLME")
# License
#Sys.setenv("PhoenixLicenseFile"="C:\\Program Files (x86)\\Pharsight\\Phoenix\\application\\Services\\Licensing\\lservrc")
#Sys.setenv("NLME_HASH"="xxxx")
#
# Look at the data
#
input=read.csv("PKPD_Data.csv")
#View(input)
#
# Graph time vs. Conc
#
df=data.frame(time=input$Time,conc=input$Conc,subject=input$ID)
ggplot(data=df,aes(x=time,y=conc))+scale_y_log10()+geom_point(colour=df$subject)+
geom_line(aes(x=df$time,y=df$conc,group=df$subject,colour=df$subject))
input=read.csv("PKPD_Data.csv")
df=data.frame(time=input$Time,conc=input$Conc,subject=input$ID)
ggplot(data=df,aes(x=time,y=conc))+scale_y_log10()+geom_point(colour=df$subject)+
geom_line(aes(x=df$time,y=df$conc,group=df$subject,colour=df$subject))
pkpdmodel = pkemaxmodel(numComp=1,
absorption = Extravascular,
isSequential = FALSE  ,
hasEliminationComp = FALSE,
checkBaseline = TRUE,
hasEffectsCompartment = TRUE,
modelName="PkPdModel")
dataset=defaultDataset(pkpdmodel,input)
initColMapping(pkpdmodel)= input
modelColumnMapping(pkpdmodel)=c(id="ID", Aa="Dose","EObs"="Effect","CObs"="Conc")
residualEffect(pkpdmodel,"C")=c(errorType=Multiplicative,SD="01")
residualEffect(pkpdmodel,"E")=c(errorType=Multiplicative,SD="01")
#initRandomEffects(pkpdmodel) = c(Diagonal,FALSE,"nEC50,nEmax,nV,nCl,nKe0","0.1,0.1,0.1,0.1,01")
initRandomEffects(pkpdmodel) = c(Diagonal,FALSE,"nEC50,nEmax,nV","0.1,0.01,0.1",
Block, FALSE,"nCl,nKe0","0.1,0,0.1")
initFixedEffects(pkpdmodel)=c(tvKe0=10,tvE0=50,tvEmax=100)
writeDefaultFiles(pkpdmodel,dataset)
estimatesUI(pkpdmodel,unique(input$ID), host)
#
# Load libraries and setup paths and hosts
#
library(ggplot2)
library(xpose)
library(Certara.NLME8)
library(RsNlme)
library(shiny)
#
# goto your working directory where you copied the demo files
#
setwd("c:/Work/RsNlmeWorkDirectory")
#
# setup environment
#
Sys.setenv("NLME_ROOT_DIRECTORY"="c:/Work/RsNlmeWorkDirectory")
Sys.setenv("INSTALLDIR"="C:/Program Files/R/R-3.5.1/library/Certara.NLME8/InstallDirNLME")
# License
#Sys.setenv("PhoenixLicenseFile"="C:\\Program Files (x86)\\Pharsight\\Phoenix\\application\\Services\\Licensing\\lservrc")
#Sys.setenv("NLME_HASH"="xxxx")
#
# Look at the data
#
input=read.csv("PKPD_Data.csv")
#View(input)
#
# Graph time vs. Conc
#
df=data.frame(time=input$Time,conc=input$Conc,subject=input$ID)
ggplot(data=df,aes(x=time,y=conc))+scale_y_log10()+geom_point(colour=df$subject)+
geom_line(aes(x=df$time,y=df$conc,group=df$subject,colour=df$subject))
input=read.csv("PKPD_Data.csv")
df=data.frame(time=input$Time,conc=input$Conc,subject=input$ID)
ggplot(data=df,aes(x=time,y=conc))+scale_y_log10()+geom_point(colour=df$subject)+
geom_line(aes(x=df$time,y=df$conc,group=df$subject,colour=df$subject))
#
# PK/Emax extravascular model
#
pkpdmodel = pkemaxmodel(numComp=1,
absorption = Extravascular,
isSequential = FALSE  ,
hasEliminationComp = FALSE,
checkBaseline = TRUE,
hasEffectsCompartment = TRUE,
modelName="PkPdModel")
dataset=defaultDataset(pkpdmodel,input)
#
# Map data columns to model variables
#
initColMapping(pkpdmodel)= input
#print(modelColumnMapping(pkpdmodel))
#print(columnNames(dataset))
#print(modelVariableNames(pkpdmodel))
modelColumnMapping(pkpdmodel)=c(id="ID", Aa="Dose","EObs"="Effect","CObs"="Conc")
#
# Error model shape
#
residualEffect(pkpdmodel,"C")=c(errorType=Multiplicative,SD="01")
residualEffect(pkpdmodel,"E")=c(errorType=Multiplicative,SD="01")
#initRandomEffects(pkpdmodel) = c(Diagonal,FALSE,"nEC50,nEmax,nV,nCl,nKe0","0.1,0.1,0.1,0.1,01")
initRandomEffects(pkpdmodel) = c(Diagonal,FALSE,"nEC50,nEmax,nV","0.1,0.01,0.1",
Block, FALSE,"nCl,nKe0","0.1,0,0.1")
initFixedEffects(pkpdmodel)=c(tvKe0=10,tvE0=50,tvEmax=100)
#print(pkpdmodel)
writeDefaultFiles(pkpdmodel,dataset)
#
# Where to execute fitting
#
host = NlmeParallelHost(sharedDirectory=Sys.getenv("NLME_ROOT_DIRECTORY"),
installationDirectory = Sys.getenv("INSTALLDIR"),
parallelMethod=NlmeParallelMethod("LOCAL_MPI"),
hostName="MPI",
numCores=4)
estimatesUI(pkpdmodel,unique(input$ID), host)
effects=getInitialEstimates()
initFixedEffects(model) = effects
engineParams = NlmeEngineExtraParams(PARAMS_METHOD=METHOD_FOCE_ELS,
PARAMS_NUM_ITERATIONS=1000,
PARAMS_SAND="TRUE")
#
# fit the model
#
job=fitmodel(host,dataset,engineParams)
#
runStatus = read.csv("Overall.csv")
print(runStatus)
library(xpose)
library(Xpose.Nlme)
xp=xposeNlme(dir="./",modelName="Initial Model")
list_vars(xp)
doxpose(xp)
build_vignettes()
build_vignettes()
library(devtools)
build_vignettes()
